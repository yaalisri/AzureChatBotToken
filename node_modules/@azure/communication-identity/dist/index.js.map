{"version":3,"file":"index.js","sources":["../src/generated/src/models/mappers.ts","../src/generated/src/models/parameters.ts","../src/generated/src/operations/communicationIdentity.ts","../src/generated/src/identityRestClientContext.ts","../src/generated/src/identityRestClient.ts","../src/constants.ts","../src/common/logger.ts","../src/common/tracing.ts","../src/communicationIdentityClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const CommunicationIdentityCreateRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentityCreateRequest\",\n    modelProperties: {\n      createTokenWithScopes: {\n        serializedName: \"createTokenWithScopes\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationIdentityAccessTokenResult: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentityAccessTokenResult\",\n    modelProperties: {\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentity\"\n        }\n      },\n      accessToken: {\n        serializedName: \"accessToken\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationIdentityAccessToken\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationIdentity: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentity\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationIdentityAccessToken: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentityAccessToken\",\n    modelProperties: {\n      token: {\n        serializedName: \"token\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresOn: {\n        serializedName: \"expiresOn\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationErrorResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationError\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationError: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"CommunicationError\" }\n          }\n        }\n      },\n      innerError: {\n        serializedName: \"innerError\",\n        type: {\n          name: \"Composite\",\n          className: \"CommunicationError\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationIdentityAccessTokenRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentityAccessTokenRequest\",\n    modelProperties: {\n      scopes: {\n        serializedName: \"scopes\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-http\";\nimport {\n  CommunicationIdentityCreateRequest as CommunicationIdentityCreateRequestMapper,\n  CommunicationIdentityAccessTokenRequest as CommunicationIdentityAccessTokenRequestMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: CommunicationIdentityCreateRequestMapper\n};\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-03-07\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const id: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: CommunicationIdentityAccessTokenRequestMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IdentityRestClient } from \"../identityRestClient\";\nimport {\n  CommunicationIdentityCreateOptionalParams,\n  CommunicationIdentityCreateResponse,\n  CommunicationIdentityAccessTokenRequest,\n  CommunicationIdentityIssueAccessTokenResponse\n} from \"../models\";\n\n/**\n * Class representing a CommunicationIdentity.\n */\nexport class CommunicationIdentity {\n  private readonly client: IdentityRestClient;\n\n  /**\n   * Initialize a new instance of the class CommunicationIdentity class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IdentityRestClient) {\n    this.client = client;\n  }\n\n  /**\n   * Create a new identity.\n   * @param options The options parameters.\n   */\n  create(\n    options?: CommunicationIdentityCreateOptionalParams\n  ): Promise<CommunicationIdentityCreateResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { options: operationOptions },\n      createOperationSpec\n    ) as Promise<CommunicationIdentityCreateResponse>;\n  }\n\n  /**\n   * Delete the identity, revoke all tokens for the identity and delete all associated data.\n   * @param id Identifier of the identity to be deleted.\n   * @param options The options parameters.\n   */\n  delete(\n    id: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { id, options: operationOptions },\n      deleteOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Revoke all access tokens for the specific identity.\n   * @param id Identifier of the identity.\n   * @param options The options parameters.\n   */\n  revokeAccessTokens(\n    id: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { id, options: operationOptions },\n      revokeAccessTokensOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Issue a new token for an identity.\n   * @param id Identifier of the identity to issue token for.\n   * @param body Requesting scopes for the new token.\n   * @param options The options parameters.\n   */\n  issueAccessToken(\n    id: string,\n    body: CommunicationIdentityAccessTokenRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<CommunicationIdentityIssueAccessTokenResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { id, body, options: operationOptions },\n      issueAccessTokenOperationSpec\n    ) as Promise<CommunicationIdentityIssueAccessTokenResponse>;\n  }\n}\n// Operation Specifications\n\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreHttp.OperationSpec = {\n  path: \"/identities\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.CommunicationIdentityAccessTokenResult\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path: \"/identities/{id}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  serializer\n};\nconst revokeAccessTokensOperationSpec: coreHttp.OperationSpec = {\n  path: \"/identities/{id}/:revokeAccessTokens\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  serializer\n};\nconst issueAccessTokenOperationSpec: coreHttp.OperationSpec = {\n  path: \"/identities/{id}/:issueAccessToken\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunicationIdentityAccessToken\n    },\n    default: {\n      bodyMapper: Mappers.CommunicationErrorResponse\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { IdentityRestClientOptionalParams } from \"./models\";\n\nconst packageName = \"azure-communication-identity\";\nconst packageVersion = \"1.0.0\";\n\nexport class IdentityRestClientContext extends coreHttp.ServiceClient {\n  endpoint: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the IdentityRestClientContext class.\n   * @param endpoint The communication resource, for example https://my-resource.communication.azure.com\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: IdentityRestClientOptionalParams) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri = options.endpoint || \"{endpoint}\";\n\n    // Parameter assignments\n    this.endpoint = endpoint;\n\n    // Assigning values to Constant parameters\n    this.apiVersion = options.apiVersion || \"2021-03-07\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as operations from \"./operations\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport { IdentityRestClientContext } from \"./identityRestClientContext\";\nimport { IdentityRestClientOptionalParams } from \"./models\";\n\nclass IdentityRestClient extends IdentityRestClientContext {\n  /**\n   * Initializes a new instance of the IdentityRestClient class.\n   * @param endpoint The communication resource, for example https://my-resource.communication.azure.com\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: IdentityRestClientOptionalParams) {\n    super(endpoint, options);\n    this.communicationIdentity = new operations.CommunicationIdentity(this);\n  }\n\n  communicationIdentity: operations.CommunicationIdentity;\n}\n\n// Operation Specifications\n\nexport {\n  IdentityRestClient,\n  IdentityRestClientContext,\n  Models as IdentityRestModels,\n  Mappers as IdentityRestMappers\n};\nexport * from \"./operations\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const SDK_VERSION: string = \"1.0.0\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The \\@azure/logger configuration for this package.\n */\nexport const logger = createClientLogger(\"communication-identity\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createSpanFunction } from \"@azure/core-tracing\";\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const createSpan = createSpanFunction({\n  packagePrefix: \"Azure.Communication\",\n  namespace: \"Microsoft.Communication\"\n});\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  createCommunicationAuthPolicy,\n  parseClientArguments,\n  isKeyCredential,\n  CommunicationUserIdentifier\n} from \"@azure/communication-common\";\nimport { isTokenCredential, KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport {\n  InternalPipelineOptions,\n  createPipelineFromOptions,\n  OperationOptions,\n  operationOptionsToRequestOptionsBase\n} from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { CommunicationIdentity, IdentityRestClient } from \"./generated/src/identityRestClient\";\nimport { SDK_VERSION } from \"./constants\";\nimport { logger } from \"./common/logger\";\nimport { createSpan } from \"./common/tracing\";\nimport {\n  CommunicationIdentityClientOptions,\n  TokenScope,\n  CommunicationUserToken,\n  CommunicationAccessToken\n} from \"./models\";\n\nconst isCommunicationIdentityClientOptions = (\n  options: any\n): options is CommunicationIdentityClientOptions =>\n  options && !isTokenCredential(options) && !isKeyCredential(options);\n\n/**\n * Client class for interacting with Azure Communication Services User Token Management.\n */\nexport class CommunicationIdentityClient {\n  /**\n   * A reference to the auto-generated UserToken HTTP client.\n   */\n  private readonly client: CommunicationIdentity;\n\n  /**\n   * Initializes a new instance of the CommunicationIdentity class.\n   * @param connectionString - Connection string to connect to an Azure Communication Service resource.\n   *                         Example: \"endpoint=https://contoso.eastus.communications.azure.net/;accesskey=secret\";\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(connectionString: string, options?: CommunicationIdentityClientOptions);\n\n  /**\n   * Initializes a new instance of the CommunicationIdentity class using an Azure KeyCredential.\n   * @param endpoint - The endpoint of the service (ex: https://contoso.eastus.communications.azure.net).\n   * @param credential - An object that is used to authenticate requests to the service. Use the AzureKeyCredential or `@azure/identity` to create a credential.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(\n    endpoint: string,\n    credential: KeyCredential,\n    options?: CommunicationIdentityClientOptions\n  );\n  /**\n   * Initializes a new instance of the CommunicationIdentity class using a TokenCredential.\n   * @param endpoint - The endpoint of the service (ex: https://contoso.eastus.communications.azure.net)\n   * @param credential - TokenCredential that is used to authenticate requests to the service.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(\n    endpoint: string,\n    credential: TokenCredential,\n    options?: CommunicationIdentityClientOptions\n  );\n\n  public constructor(\n    connectionStringOrEndpoint: string,\n    credentialOrOptions?: KeyCredential | CommunicationIdentityClientOptions | TokenCredential,\n    maybeOptions: CommunicationIdentityClientOptions = {}\n  ) {\n    const { url, credential } = parseClientArguments(\n      connectionStringOrEndpoint,\n      credentialOrOptions\n    );\n    const options = isCommunicationIdentityClientOptions(credentialOrOptions)\n      ? credentialOrOptions\n      : maybeOptions;\n    const libInfo = `azsdk-js-communication-identity/${SDK_VERSION}`;\n\n    if (!options.userAgentOptions) {\n      options.userAgentOptions = {};\n    }\n\n    if (options.userAgentOptions.userAgentPrefix) {\n      options.userAgentOptions.userAgentPrefix = `${options.userAgentOptions.userAgentPrefix} ${libInfo}`;\n    } else {\n      options.userAgentOptions.userAgentPrefix = libInfo;\n    }\n\n    const internalPipelineOptions: InternalPipelineOptions = {\n      ...options,\n      ...{\n        loggingOptions: {\n          logger: logger.info\n        }\n      }\n    };\n\n    const authPolicy = createCommunicationAuthPolicy(credential);\n    const pipeline = createPipelineFromOptions(internalPipelineOptions, authPolicy);\n    this.client = new IdentityRestClient(url, pipeline).communicationIdentity;\n  }\n\n  /**\n   * Creates a scoped user token.\n   *\n   * @param user - The user whose tokens are being issued.\n   * @param scopes - Scopes to include in the token.\n   * @param options - Additional options for the request.\n   */\n  public async getToken(\n    user: CommunicationUserIdentifier,\n    scopes: TokenScope[],\n    options: OperationOptions = {}\n  ): Promise<CommunicationAccessToken> {\n    const { span, updatedOptions } = createSpan(\"CommunicationIdentity-issueToken\", options);\n    try {\n      const { _response, ...result } = await this.client.issueAccessToken(\n        user.communicationUserId,\n        { scopes },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return result;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Revokes all data and tokens created for a user.\n   *\n   * @param user - The user whose tokens are being revoked.\n   * @param options - Additional options for the request.\n   */\n  public async revokeTokens(\n    user: CommunicationUserIdentifier,\n    options: OperationOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"CommunicationIdentity-revokeTokens\", options);\n    try {\n      await this.client.revokeAccessTokens(\n        user.communicationUserId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a single user.\n   *\n   * @param options - Additional options for the request.\n   */\n  public async createUser(options: OperationOptions = {}): Promise<CommunicationUserIdentifier> {\n    const { span, updatedOptions } = createSpan(\"CommunicationIdentity-createUser\", options);\n    try {\n      const result = await this.client.create(operationOptionsToRequestOptionsBase(updatedOptions));\n      return {\n        communicationUserId: result.identity.id\n      };\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a single user and a token simultaneously.\n   *\n   * @param scopes - Scopes to include in the token.\n   * @param options - Additional options for the request.\n   */\n  public async createUserAndToken(\n    scopes: TokenScope[],\n    options: OperationOptions = {}\n  ): Promise<CommunicationUserToken> {\n    const { span, updatedOptions } = createSpan(\n      \"CommunicationIdentity-createUserAndToken\",\n      options\n    );\n    try {\n      const { identity, accessToken } = await this.client.create({\n        body: { createTokenWithScopes: scopes },\n        ...operationOptionsToRequestOptionsBase(updatedOptions)\n      });\n      return {\n        ...accessToken!,\n        user: { communicationUserId: identity.id }\n      };\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Triggers revocation event for user and deletes all its data.\n   *\n   * @param user - The user being deleted.\n   * @param options - Additional options for the request.\n   */\n  public async deleteUser(\n    user: CommunicationUserIdentifier,\n    options: OperationOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"CommunicationIdentity-deleteUser\", options);\n    try {\n      await this.client.delete(\n        user.communicationUserId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n"],"names":["CommunicationIdentityCreateRequestMapper","CommunicationIdentityAccessTokenRequestMapper","CommunicationIdentity","coreHttp.operationOptionsToRequestOptionsBase","coreHttp.Serializer","Mappers.CommunicationIdentityAccessTokenResult","Mappers.CommunicationErrorResponse","Parameters.body","Parameters.apiVersion","Parameters.endpoint","Parameters.contentType","Parameters.id","Mappers.CommunicationIdentityAccessToken","Parameters.body1","coreHttp.ServiceClient","coreHttp.getDefaultUserAgentValue","operations.CommunicationIdentity","createClientLogger","createSpanFunction","isTokenCredential","isKeyCredential","parseClientArguments","createCommunicationAuthPolicy","createPipelineFromOptions","operationOptionsToRequestOptionsBase","CanonicalCode"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;AAUO,MAAM,kCAAkC,GAA6B;IAC1E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,qBAAqB,EAAE;gBACrB,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;SACF;KACF;CACF,CAAC;AAEK,MAAM,sCAAsC,GAA6B;IAC9E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wCAAwC;QACnD,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kCAAkC;iBAC9C;aACF;SACF;KACF;CACF,CAAC;AAEK,MAAM,qBAAqB,GAA6B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEK,MAAM,gCAAgC,GAA6B;IACxE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kCAAkC;QAC7C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;SACF;KACF;CACF,CAAC;AAEK,MAAM,0BAA0B,GAA6B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;SACF;KACF;CACF,CAAC;AAEK,MAAM,kBAAkB,GAA6B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,oBAAoB,EAAE;qBAC7D;iBACF;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;SACF;KACF;CACF,CAAC;AAEK,MAAM,uCAAuC,GAA6B;IAC/E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yCAAyC;QACpD,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;SACF;KACF;CACF;;;;;;;;;;;;;ACtKD;;;;;;;AAaA,AAKO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;IACzC,MAAM,EAAE;QACN,YAAY,EAAE,kBAAkB;QAChC,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,IAAI,GAAuB;IACtC,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;IAClC,MAAM,EAAEA,kCAAwC;CACjD,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA0B;IAC7C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;IACD,YAAY,EAAE,IAAI;CACnB,CAAC;AAEF,AAAO,MAAM,UAAU,GAA4B;IACjD,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE;QACN,YAAY,EAAE,YAAY;QAC1B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,EAAE,GAA0B;IACvC,aAAa,EAAE,IAAI;IACnB,MAAM,EAAE;QACN,cAAc,EAAE,IAAI;QACpB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAAuB;IACvC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAEC,uCAA6C;CACtD,CAAC;;ACzEF;;;;;;;AAQA,AAWA;;;AAGA,MAAaC,uBAAqB;;;;;IAOhC,YAAY,MAA0B;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;IAMD,MAAM,CACJ,OAAmD;QAEnD,MAAM,gBAAgB,GAAgCC,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAC7B,mBAAmB,CAC4B,CAAC;KACnD;;;;;;IAOD,MAAM,CACJ,EAAU,EACV,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,EAAE,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACjC,mBAAmB,CACc,CAAC;KACrC;;;;;;IAOD,kBAAkB,CAChB,EAAU,EACV,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,EAAE,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACjC,+BAA+B,CACE,CAAC;KACrC;;;;;;;IAQD,gBAAgB,CACd,EAAU,EACV,IAA6C,EAC7C,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACvC,6BAA6B,CAC4B,CAAC;KAC7D;CACF;AACD;AAEA,MAAM,UAAU,GAAG,IAAIC,mBAAmB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAEvE,MAAM,mBAAmB,GAA2B;IAClD,IAAI,EAAE,aAAa;IACnB,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEC,sCAA8C;SAC3D;QACD,OAAO,EAAE;YACP,UAAU,EAAEC,0BAAkC;SAC/C;KACF;IACD,WAAW,EAAEC,IAAe;IAC5B,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,QAAmB,CAAC;IACpC,gBAAgB,EAAE,CAACC,WAAsB,CAAC;IAC1C,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA2B;IAClD,IAAI,EAAE,kBAAkB;IACxB,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEJ,0BAAkC;SAC/C;KACF;IACD,eAAe,EAAE,CAACE,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,QAAmB,EAAEE,EAAa,CAAC;IACnD,UAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA2B;IAC9D,IAAI,EAAE,sCAAsC;IAC5C,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,0BAAkC;SAC/C;KACF;IACD,eAAe,EAAE,CAACE,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,QAAmB,EAAEE,EAAa,CAAC;IACnD,UAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA2B;IAC5D,IAAI,EAAE,oCAAoC;IAC1C,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEC,gCAAwC;SACrD;QACD,OAAO,EAAE;YACP,UAAU,EAAEN,0BAAkC;SAC/C;KACF;IACD,WAAW,EAAEO,KAAgB;IAC7B,eAAe,EAAE,CAACL,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,QAAmB,EAAEE,EAAa,CAAC;IACnD,gBAAgB,EAAE,CAACD,WAAsB,CAAC;IAC1C,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;;AC1KF;;;;;;;AAQA,AAGA,MAAM,WAAW,GAAG,8BAA8B,CAAC;AACnD,MAAM,cAAc,GAAG,OAAO,CAAC;AAE/B,MAAa,yBAA0B,SAAQI,sBAAsB;;;;;;IASnE,YAAY,QAAgB,EAAE,OAA0C;QACtE,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;;QAGD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;SACd;QAED,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACtB,MAAM,gBAAgB,GAAGC,iCAAiC,EAAE,CAAC;YAC7D,OAAO,CAAC,SAAS,GAAG,GAAG,WAAW,IAAI,cAAc,IAAI,gBAAgB,EAAE,CAAC;SAC5E;QAED,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAE1B,IAAI,CAAC,kBAAkB,GAAG,iCAAiC,CAAC;QAE5D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,QAAQ,IAAI,YAAY,CAAC;;QAGhD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;QAGzB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,YAAY,CAAC;KACtD;CACF;;AClDD;;;;;;;AAQA,AAMA,MAAM,kBAAmB,SAAQ,yBAAyB;;;;;;IAMxD,YAAY,QAAgB,EAAE,OAA0C;QACtE,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACzB,IAAI,CAAC,qBAAqB,GAAG,IAAIC,uBAAgC,CAAC,IAAI,CAAC,CAAC;KACzE;CAGF;;AC1BD;AACA;AAEA,AAAO,MAAM,WAAW,GAAW,OAAO,CAAC;;ACH3C;AACA,AAIA;;;AAGA,AAAO,MAAM,MAAM,GAAGC,2BAAkB,CAAC,wBAAwB,CAAC,CAAC;;ACRnE;AACA,AAIA;;;;AAIA,AAAO,MAAM,UAAU,GAAGC,8BAAkB,CAAC;IAC3C,aAAa,EAAE,qBAAqB;IACpC,SAAS,EAAE,yBAAyB;CACrC,CAAC,CAAC;;ACZH;AACA,AA2BA,MAAM,oCAAoC,GAAG,CAC3C,OAAY,KAEZ,OAAO,IAAI,CAACC,0BAAiB,CAAC,OAAO,CAAC,IAAI,CAACC,mCAAe,CAAC,OAAO,CAAC,CAAC;AAEtE;;;AAGA,MAAa,2BAA2B;IAqCtC,YACE,0BAAkC,EAClC,mBAA0F,EAC1F,eAAmD,EAAE;QAErD,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,GAAGC,wCAAoB,CAC9C,0BAA0B,EAC1B,mBAAmB,CACpB,CAAC;QACF,MAAM,OAAO,GAAG,oCAAoC,CAAC,mBAAmB,CAAC;cACrE,mBAAmB;cACnB,YAAY,CAAC;QACjB,MAAM,OAAO,GAAG,mCAAmC,WAAW,EAAE,CAAC;QAEjE,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC7B,OAAO,CAAC,gBAAgB,GAAG,EAAE,CAAC;SAC/B;QAED,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe,EAAE;YAC5C,OAAO,CAAC,gBAAgB,CAAC,eAAe,GAAG,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,IAAI,OAAO,EAAE,CAAC;SACrG;aAAM;YACL,OAAO,CAAC,gBAAgB,CAAC,eAAe,GAAG,OAAO,CAAC;SACpD;QAED,MAAM,uBAAuB,mCACxB,OAAO,GACP;YACD,cAAc,EAAE;gBACd,MAAM,EAAE,MAAM,CAAC,IAAI;aACpB;SACF,CACF,CAAC;QAEF,MAAM,UAAU,GAAGC,iDAA6B,CAAC,UAAU,CAAC,CAAC;QAC7D,MAAM,QAAQ,GAAGC,kCAAyB,CAAC,uBAAuB,EAAE,UAAU,CAAC,CAAC;QAChF,IAAI,CAAC,MAAM,GAAG,IAAI,kBAAkB,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,qBAAqB,CAAC;KAC3E;;;;;;;;IASY,QAAQ,CACnB,IAAiC,EACjC,MAAoB,EACpB,UAA4B,EAAE;;YAE9B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;YACzF,IAAI;gBACF,MAAM,KAA2B,MAAM,IAAI,CAAC,MAAM,CAAC,gBAAgB,CACjE,IAAI,CAAC,mBAAmB,EACxB,EAAE,MAAM,EAAE,EACVC,6CAAoC,CAAC,cAAc,CAAC,CACrD,EAJK,EAAE,SAAS,OAIhB,EAJqB,MAAM,oBAAtB,aAAwB,CAI7B,CAAC;gBACF,OAAO,MAAM,CAAC;aACf;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;;IAQY,YAAY,CACvB,IAAiC,EACjC,UAA4B,EAAE;;YAE9B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,oCAAoC,EAAE,OAAO,CAAC,CAAC;YAC3F,IAAI;gBACF,MAAM,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAClC,IAAI,CAAC,mBAAmB,EACxBD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;aACH;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;IAOY,UAAU,CAAC,UAA4B,EAAE;;YACpD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;YACzF,IAAI;gBACF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAACD,6CAAoC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC9F,OAAO;oBACL,mBAAmB,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE;iBACxC,CAAC;aACH;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;;IAQY,kBAAkB,CAC7B,MAAoB,EACpB,UAA4B,EAAE;;YAE9B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,0CAA0C,EAC1C,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,iBACxD,IAAI,EAAE,EAAE,qBAAqB,EAAE,MAAM,EAAE,IACpCD,6CAAoC,CAAC,cAAc,CAAC,EACvD,CAAC;gBACH,uCACK,WAAY,KACf,IAAI,EAAE,EAAE,mBAAmB,EAAE,QAAQ,CAAC,EAAE,EAAE,IAC1C;aACH;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;;IAQY,UAAU,CACrB,IAAiC,EACjC,UAA4B,EAAE;;YAE9B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;YACzF,IAAI;gBACF,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CACtB,IAAI,CAAC,mBAAmB,EACxBD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;aACH;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;CACF;;;;"}